pwd - текущее положение(в какой папке находимся)

cd - переход:
cd папка - переход к папке,
cd папка/вложенная-папка
cd ~ - переход к домашней папке
cd - - переход к папке в которой только были
cd .. - переход на уровень выше текущей папки
cd ../.. - переход на 2 уровеня выше текущей папки
ls - показывает список файлов в текущей папке
ls папка/ - показывает список файлов в указанной папке
ls ~/папка/вложенная-папка - показывает список файлов в указанной папке
ls -1 папка - показывает список файлов в указанной папке в столбец
ls -1 -a - показывает список файлов в указанной папке в столбец в том числе скрытые
start . - открыть текущую папку в проводнике
start файл.html - открыть файл (откроет программой по умолчанию)
cat файл.html - выводит содержимое файла

git help команда - справка по команде
git config --global user.name "имя" - имя пользователя
git config --global user.email "почта" - почта пользователя
git config --list - проверить текущие настройки
git init - инициализация проекта в репозиторий
git status - показывает текущее состояние
git add файл.html - заиндексировать файл
git add файл1.html файл2.html - заиндексировать несколько указанных файлов
git add . - заиндексировать все файлы
git commit -m "название комита" - закомитить изменение
git diff - показывает изменения в файле/файлах непроиндесированных
git diff --staged - показывает изменения в файле/файлах проиндесированных
git log - показывает историю комитов(листать клавишами вверх и вниз,закрыть клавишей "Q")
git log -1 - показывает последний комит
git log --oneline - показывает список комитов по 1 строке(а не расширено)
git log --oneline --all - показывает весь список
git log --oneline --all --graph - показывает весь список и рисует схему
git show хэш-комита - показывает какие изменения были в этом комите
git checkout файл.html - откатить изменения в файле либо восстанавливает при его удалении
git checkout хэш-комита файл.html - откатить изменения в файле из определенного комита по хэшу
git rest HEAD файл.html - отменить индексацию изменений в указанном файле(не индексировать изменения в указанном файле)
git commit --amend -m 'Новое название комита' - создает комит под новым названием
git commit --amend --no-edit
git rm файл.html - удаляет файл из комита и из папки
git rm --cached папка/файл.html - удаляет файл из комита но НЕ из папки
git cat-file -p хэш-комита - показывает содержимое комита
git checkout хэш-комита - переход в выбранный комит

git checkout -b "название-ветки" хэш-комита - создание ветки из определенного комита
git checkout -b "название-ветки" - создание ветки из текущего комита
git checkout название-ветки - переключение между ветками по названию ветки
git merge название-ветки - слияние ветки с мастером(если находились в мастере во время слияния)
git merge название-ветки -m "название комита" - слияние ветки с мастером(если находились в мастере во время слияния) и сразу комит
git merge --abort - отменить слияние
git clone git@github.com:restby/название репозитория.git - клонировать репозиторий

git pull academy master
git push origin master

Конфликты:
CONFLICT (content): Merge conflict in файл.html - конфликт в указанном файле
Auto-merging файл.html - выполнено автослияние
название-редактора файл.html - открыть в редакторе файл
<<<<<<<<<<<< HEAD
вариант 1
==========
вариант2
>>>>>>>>>>>>> название-другой-ветки
выбрать,убрать 1 из вариантов, убрать скобки и равно, сохранить, закомитить
by us - текущая ветка
by they - ветка которую вливаем в текущую

git remote add origin git@github.com:restby/test.git - добавляет репозиторий (при SSH)
git remote -v - проверить что репозиторий добавлен

сгенерить SSH ключ на каждом компе,на которых захожу в github через консоль:
mkdir ~/.ssh(если эта папка была,то лучше удалить,путь: C/Users/user1)
cd ~/.ssh
ssh-keygen -t rsa 4096 -C "своя-почта-с-гитхаба@.com" - генерация ключа
название ключа - ...
пароль - можно не вводить
подтверждение пароля - можно не вводить
Получаем 2 файла названиеКлюча и названиеКлюча.pub
В настройках Github(на сайте) выбрать SSH and GPF keys?добавить,назвать и вставить содержание ключа(с расширением pub),команда в консоли из папки .ssh cat названиеКлюча.pub
В этой же папаке создать файл с названием config c содержанием:
Host github.com
	IdentityFile ~/.ssh/название-ключа

проверка удачной связи по ssh ключам:
ssh -T -i ~/.ssh/название-ключа git@github.com - напрямую по ключу без настройки
ssh -T git@github.com - уже с настройками из файла config
